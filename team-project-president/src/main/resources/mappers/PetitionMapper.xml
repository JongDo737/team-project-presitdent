<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.president.domain.petition.PetitionRepository">
	<insert id="insertPetition" parameterType="com.springboot.president.domain.petition.Petition">
		INSERT INTO
			petition_mst
		VALUES(
			0,
			#{user_id},
			#{title},
			#{kategorie},
			#{content},
			#{link},
			#{tag},
			0,
			NOW(),
			DATE_ADD(NOW(),INTERVAL 30 DAY)
		
		);
	
	</insert>
	<select id="GetPetitionByid" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		WHERE
			um.id = #{id};
	</select>
	<select id="GetWaitPetition" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		where
			agree_count >= 200000
		ORDER BY
			end_date DESC
		LIMIT
			4;	
	</select>
	<select id="GetPetitionAll" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		ORDER BY
			agree_count DESC
		LIMIT
			5;	
	
	
	</select>
	<select id="GetPetitionByKategorie" resultType="com.springboot.president.domain.petition.GetPetitions" parameterType="String">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		WHERE
			pm.kategorie = #{kategorie}
		ORDER BY
			agree_count DESC
		LIMIT
			5;	
	
	
	</select>
	
	
	<select id="GetRecentPetition" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		
		ORDER BY
			create_date DESC;
		
	</select>
	<select id="GetSuggestionPetition" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		
		ORDER BY
			agree_count DESC;
	</select>
	<select id="GetRecentPetitionByKategorie" resultType="com.springboot.president.domain.petition.GetPetitions" parameterType="String">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		where
		kategorie = #{kategorie}
		ORDER BY
			create_date DESC;
	</select>
	<select id="GetSuggestionPetitionByKategorie" resultType="com.springboot.president.domain.petition.GetPetitions" parameterType="String">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		WHERE
		 kategorie = #{kategorie}
		ORDER BY
			agree_count DESC;
	</select>
	
	
	<select id="GetPetitionAllOver" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		WHERE
			end_date &lt; #{nowDate}
		ORDER BY
			agree_count DESC
		LIMIT
			5;	
	
	
	</select>
	<select id="GetPetitionByKategorieOver" resultType="com.springboot.president.domain.petition.GetPetitions" parameterType="String">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		WHERE
			pm.kategorie = #{kategorie}
			and
			end_date &lt; #{nowDate}
		ORDER BY
			agree_count DESC
		LIMIT
			5;	
	
	
	</select>
	
	
	<select id="GetRecentPetitionOver" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		where
			end_date &lt; #{nowDate}
		ORDER BY
			create_date DESC;
		
	</select>
	<select id="GetSuggestionPetitionOver" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		where
			end_date &lt; #{nowDate}
		ORDER BY
			agree_count DESC;
	</select>
	<select id="GetRecentPetitionByKategorieOver" resultType="com.springboot.president.domain.petition.GetPetitions" parameterType="String">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		where
			kategorie = #{kategorie}
			and
			end_date &lt; #{nowDate}
		ORDER BY
			create_date DESC;
	</select>
	<select id="GetSuggestionPetitionByKategorieOver" resultType="com.springboot.president.domain.petition.GetPetitions" parameterType="String">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		WHERE
		 	kategorie = #{kategorie}
		 	and
			end_date &lt; #{nowDate}
		ORDER BY
			agree_count DESC;
	</select>
	
	<select id="GetBoardByPetitionId" resultType="com.springboot.president.domain.petition.GetPetitions">
			SELECT
				pm.petition_id,
				pm.title,
				pm.kategorie,
				pm.content,
				pm.link,
				pm.tag,
				pm.agree_count,
				pm.create_date,
				pm.end_date,
				um.id,
				um.provider	
			FROM
				petition_mst pm
				LEFT OUTER JOIN user_mst um ON(pm.user_id = um.id)
			WHERE
				pm.petition_id = #{petition_id};
	</select>
	
	<select id="GetRecoPetitionAll" resultType="com.springboot.president.domain.petition.GetPetitions">
		SELECT
			um.provider,
			pm.user_id,
			pm.petition_id,
			pm.title,
			pm.kategorie,
			pm.content,
			pm.link,
			pm.tag,
			pm.agree_count,
			pm.create_date,
			pm.end_date
			
		FROM
			petition_mst pm
			LEFT OUTER JOIN user_mst um ON(um.id = pm.user_id)
		WHERE
			pm.end_date >= CURDATE()
		ORDER BY
			agree_count DESC	
	
	
	</select>

	<insert id="insertPetitionReply" parameterType="com.springboot.president.domain.petition.Petition">
		INSERT INTO
			petition_board_mst
		VALUES(
			0,
			#{user_id},
			#{petition_id},
			#{provider},
			#{reply}
		
		);
	
	</insert>
	

</mapper>